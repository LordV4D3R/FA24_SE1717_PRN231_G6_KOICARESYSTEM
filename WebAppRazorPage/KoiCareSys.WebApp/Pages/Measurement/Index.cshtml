@page
@model KoiCareSys.WebApp.Pages.Measurement.IndexModel
@{
    ViewData["Title"] = "Measurement Page";
}

<style>
    .card-custom {
        border-radius: 15px;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    }

    .table thead th {
        background-color: #f8f9fa;
    }

    .btn-custom {
        border-radius: 50px;
        transition: background-color 0.3s ease;
    }

        .btn-custom:hover {
            background-color: #0056b3;
            color: #fff;
        }

    .search-bar {
        max-width: 300px;
    }
</style>

<div class="container mt-5">
    <div class="row justify-content-center">
        <div class="col-12">
            <div class="card card-custom">
                <div class="card-header d-flex justify-content-between align-items-center">
                    <h2 class="card-title mb-0">Measurements</h2>
                    <div class="search-bar input-group">
                        <input type="text" class="form-control" id="searchMeasurements" placeholder="Search measurements" aria-label="Search measurements" />
                        <button class="btn btn-primary" type="button" id="searchButton">Search</button>
                    </div>
                    <a href="/Measurement/Create" class="btn btn-md btn-primary">Create</a>
                </div>
                <div class="card-body p-4">
                    <div class="table-responsive">
                        <table class="table table-striped table-hover" id="measurementsTable">
                            <thead>
                                <tr>
                                    <th>No.</th>
                                    <th>MeasurementId</th>
                                    <th>Pond Name</th>
                                    <th>DateRecord</th>
                                    <th>Note</th>
                                    <th class="text-center">Actions</th>
                                </tr>
                            </thead>
                            <tbody id="measurementsTableBody">
                                <!-- Data will be populated here by AJAX -->
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script>
        $(document).ready(function () {
            let ponds = [];

            // Fetch Ponds
            function fetchPonds(callback) {
                $.ajax({
                    url: 'https://localhost:7050/api/Pond',
                    type: 'GET',
                    success: function (response) {
                        ponds = response;
                        if (callback) callback();
                    },
                    error: function (xhr, status, error) {
                        console.error('Error fetching ponds:', error);
                    }
                });
            }

            // Fetch Measurements
            function fetchMeasurements() {
                $.ajax({
                    url: 'https://localhost:7050/api/Measurement',
                    type: 'GET',
                    success: function (response) {
                        var measurements = response.data;
                        var tbody = $('#measurementsTableBody');
                        tbody.empty(); // Clear existing data

                        $.each(measurements, function (index, measurement) {
                            var pondName = ponds.find(pond => pond.id === measurement.pondId)?.pondName || 'Unknown';
                            var row = `<tr>
                                                            <td>${index + 1}</td>
                                                            <td>${measurement.measurementId}</td>
                                                            <td>${pondName}</td>
                                                            <td>${new Date(measurement.dateRecord).toLocaleDateString()}</td>
                                                            <td>${measurement.note}</td>
                                                            <td class="text-center">
                                                                <button class="btn btn-danger btn-sm btn-custom delete-btn" data-id="${measurement.measurementId}">
                                                                    <i class="fas fa-trash-alt"></i> Delete
                                                                </button>
                                                                <button class="btn btn-info btn-sm btn-custom" type="button" data-bs-toggle="collapse" data-bs-target="#measureData_${measurement.measurementId}">
                                                                    <i class="fas fa-info-circle"></i> Details
                                                                </button>
                                                            </td>
                                                        </tr>
                                                        <tr class="collapse" id="measureData_${measurement.measurementId}">
                                                            <td colspan="6">
                                                                <div class="card card-body">
                                                                    <h5>Measure Data</h5>
                                                                    <table class="table table-sm table-bordered">
                                                                        <thead>
                                                                            <tr>
                                                                                <th>MeasureDataId</th>
                                                                                <th>Volume</th>
                                                                                <th>UnitId</th>
                                                                            </tr>
                                                                        </thead>
                                                                        <tbody>`;
                            $.each(measurement.measureData, function (i, measureData) {
                                row += `<tr>
                                                            <td>${measureData.measureDataId}</td>
                                                            <td>${measureData.volume}</td>
                                                            <td>${measureData.unitId}</td>
                                                        </tr>`;
                            });
                            row += `                    </tbody>
                                                                    </table>
                                                                </div>
                                                            </td>
                                                        </tr>`;
                            tbody.append(row);
                        });
                    },
                    error: function (xhr, status, error) {
                        console.error('Error fetching measurements:', error);
                    }
                });
            }

            // Delete measurement function
            $(document).on('click', '.delete-btn', function () {
                const measurementId = $(this).data('id');

                if (confirm('Are you sure you want to delete this measurement?')) {
                    $.ajax({
                        url: 'https://localhost:7050/api/Measurement/' + measurementId,
                        type: 'DELETE',
                        success: function (result) {
                            alert('Measurement deleted successfully!');
                            fetchMeasurements(); // Refresh the measurements table
                        },
                        error: function (xhr, status, error) {
                            alert('Error deleting measurement: ' + error);
                        }
                    });
                }
            });

            // Initial fetch
            fetchPonds(fetchMeasurements);
        });
    </script>
}
